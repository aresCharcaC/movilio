import 'package:flutter/material.dart';

class RideRequestDetailScreen extends StatefulWidget {
  const RideRequestDetailScreen({Key? key}) : super(key: key);

  @override
  State<RideRequestDetailScreen> createState() => _RideRequestDetailScreenState();
}

class _RideRequestDetailScreenState extends State<RideRequestDetailScreen> {
  final TextEditingController _priceController = TextEditingController(text: '50.00');
  
  // Datos ficticios para la demo
  final String passengerName = 'Alexis';
  final double passengerRating = 4.9;
  final int ratingCount = 53;
  final String pickupAddress = 'C. Tecate 3516 (Río Tijuana 3ra Etapa)';
  final String destinationAddress = 'Ruta Independencia 3808 (Guaycura)';
  final String distance = '2.0 km';
  final String duration = '6 min';
  final double requestedPrice = 50.00;

  @override
  void dispose() {
    _priceController.dispose();
    super.dispose();
  }

  void _adjustPrice(double amount) {
    double currentValue = double.tryParse(_priceController.text) ?? 0.0;
    double newValue = (currentValue + amount).clamp(0.0, 999.99);
    _priceController.text = newValue.toStringAsFixed(2);
  }

  void _acceptRequest() {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
        content: Text('¡Oferta enviada! Esperando respuesta del pasajero...'),
        backgroundColor: Colors.green,
      ),
    );
  }

  void _sendCounterOffer() {
    final double counterPrice = double.tryParse(_priceController.text) ?? 0.0;
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('Contraoferta enviada: S/${counterPrice.toStringAsFixed(2)}'),
        backgroundColor: Colors.blue,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[100],
      body: Stack(
        children: [
          // Mapa (Placeholder)
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                  colors: [Color(0xFFe8f5e8), Color(0xFFf0f8f0)],
                ),
              ),
              child: Padding(
                padding: const EdgeInsets.fromLTRB(20, 90, 20, 300),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[50],
                    border: Border.all(color: Colors.grey[300]!, width: 2),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: const Center(
                    child: Text(
                      'MAPA',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w500,
                        color: Colors.grey,
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),

          // Header transparente
          Positioned(
            top: 0,
            left: 0,
            right: 0,
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.95),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.08),
                    blurRadius: 8,
                    offset: const Offset(0, 2),
                  ),
                ],
              ),
              child: SafeArea(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
                  child: Row(
                    children: [
                      IconButton(
                        onPressed: () => Navigator.pop(context),
                        icon: const Icon(Icons.arrow_back),
                        style: IconButton.styleFrom(
                          backgroundColor: Colors.grey[100],
                          shape: const CircleBorder(),
                        ),
                      ),
                      const SizedBox(width: 12),
                      const Text(
                        'Solicitud de Viaje',
                        style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.w600,
                          color: Color(0xFF2c3e50),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),

          // Leyenda del mapa
          Positioned(
            top: 100,
            right: 16,
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.95),
                borderRadius: BorderRadius.circular(8),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.1),
                    blurRadius: 8,
                    offset: const Offset(0, 2),
                  ),
                ],
              ),
              padding: const EdgeInsets.all(8),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  _buildLegendItem(Colors.blue, 'Tu ubicación'),
                  const SizedBox(height: 4),
                  _buildLegendItem(Colors.green, 'Punto recogida'),
                  const SizedBox(height: 4),
                  _buildLegendItem(Colors.red, 'Punto destino'),
                ],
              ),
            ),
          ),

          // Bottom Sheet
          Positioned(
            bottom: 0,
            left: 0,
            right: 0,
            child: Container(
              decoration: const BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(20),
                  topRight: Radius.circular(20),
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black12,
                    blurRadius: 12,
                    offset: Offset(0, -4),
                  ),
                ],
              ),
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    // Request Card (Reutilizada)
                    _buildRequestCard(),
                    
                    const SizedBox(height: 20),
                    
                    // Botón Aceptar
                    SizedBox(
                      width: double.infinity,
                      child: ElevatedButton(
                        onPressed: _acceptRequest,
                        style: ElevatedButton.styleFrom(
                          backgroundColor: const Color(0xFF27ae60),
                          foregroundColor: Colors.white,
                          padding: const EdgeInsets.symmetric(vertical: 16),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(12),
                          ),
                          elevation: 2,
                        ),
                        child: Text(
                          'Aceptar por S/${requestedPrice.toStringAsFixed(2)}',
                          style: const TextStyle(
                            fontSize: 16,
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                      ),
                    ),
                    
                    const SizedBox(height: 16),
                    
                    // Sección de contraoferta
                    _buildCounterOfferSection(),
                    
                    const SizedBox(height: 16),
                    
                    // Botón Cerrar
                    SizedBox(
                      width: double.infinity,
                      child: OutlinedButton(
                        onPressed: () => Navigator.pop(context),
                        style: OutlinedButton.styleFrom(
                          foregroundColor: Colors.grey[600],
                          side: BorderSide(color: Colors.grey[300]!),
                          padding: const EdgeInsets.symmetric(vertical: 12),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(8),
                          ),
                        ),
                        child: const Text(
                          'Cerrar',
                          style: TextStyle(
                            fontSize: 14,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildLegendItem(Color color, String text) {
    return Row(
      mainAxisSize: MainAxisSize.min,
      children: [
        Container(
          width: 8,
          height: 8,
          decoration: BoxDecoration(
            color: color,
            shape: BoxShape.circle,
          ),
        ),
        const SizedBox(width: 6),
        Text(
          text,
          style: const TextStyle(
            fontSize: 11,
            color: Color(0xFF495057),
          ),
        ),
      ],
    );
  }

  Widget _buildRequestCard() {
    return Container(
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: const Color(0xFFe1e8ed)),
      ),
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          // Info del pasajero
          Row(
            children: [
              Container(
                width: 45,
                height: 45,
                decoration: const BoxDecoration(
                  gradient: LinearGradient(
                    colors: [Color(0xFF667eea), Color(0xFF764ba2)],
                  ),
                  shape: BoxShape.circle,
                ),
                child: const Center(
                  child: Text(
                    'A',
                    style: TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                      fontSize: 18,
                    ),
                  ),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      passengerName,
                      style: const TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.w600,
                        color: Color(0xFF2c3e50),
                      ),
                    ),
                    Row(
                      children: [
                        const Icon(
                          Icons.star,
                          color: Color(0xFFf39c12),
                          size: 16,
                        ),
                        const SizedBox(width: 4),
                        Text(
                          '$passengerRating ($ratingCount)',
                          style: const TextStyle(
                            fontSize: 13,
                            color: Color(0xFF7f8c8d),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
          
          const SizedBox(height: 12),
          
          // Detalles del viaje
          Column(
            children: [
              _buildLocationRow(Colors.green, pickupAddress),
              const SizedBox(height: 8),
              _buildLocationRow(Colors.red, destinationAddress),
            ],
          ),
          
          const SizedBox(height: 12),
          
          // Info del viaje
          Container(
            padding: const EdgeInsets.only(top: 12),
            decoration: const BoxDecoration(
              border: Border(
                top: BorderSide(color: Color(0xFFecf0f1)),
              ),
            ),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(
                  '$distance • $duration',
                  style: const TextStyle(
                    fontSize: 12,
                    color: Color(0xFF7f8c8d),
                  ),
                ),
                Text(
                  'S/${requestedPrice.toStringAsFixed(2)}',
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF27ae60),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildLocationRow(Color color, String address) {
    return Row(
      children: [
        Container(
          width: 8,
          height: 8,
          decoration: BoxDecoration(
            color: color,
            shape: BoxShape.circle,
          ),
        ),
        const SizedBox(width: 12),
        Expanded(
          child: Text(
            address,
            style: const TextStyle(fontSize: 14),
          ),
        ),
      ],
    );
  }

  Widget _buildCounterOfferSection() {
    return Column(
      children: [
        const Text(
          'Ofrecer tarifa',
          style: TextStyle(
            fontSize: 12,
            color: Color(0xFF7f8c8d),
          ),
        ),
        const SizedBox(height: 8),
        Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // Botón -0.50
            _buildPriceButton('-0.50', () => _adjustPrice(-0.5)),
            const SizedBox(width: 10),
            
            // Campo de precio
            SizedBox(
              width: 80,
              child: TextField(
                controller: _priceController,
                keyboardType: const TextInputType.numberWithOptions(decimal: true),
                textAlign: TextAlign.center,
                style: const TextStyle(
                  fontWeight: FontWeight.w600,
                  fontSize: 14,
                  color: Color(0xFF2c3e50),
                ),
                decoration: InputDecoration(
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                    borderSide: const BorderSide(color: Color(0xFFecf0f1), width: 2),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                    borderSide: const BorderSide(color: Color(0xFF3498db), width: 2),
                  ),
                  contentPadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 8),
                ),
                onSubmitted: (value) => _sendCounterOffer(),
              ),
            ),
            
            const SizedBox(width: 10),
            // Botón +0.50
            _buildPriceButton('+0.50', () => _adjustPrice(0.5)),
          ],
        ),
      ],
    );
  }

  Widget _buildPriceButton(String text, VoidCallback onPressed) {
    return GestureDetector(
      onTap: onPressed,
      child: Container(
        width: 45,
        height: 35,
        decoration: BoxDecoration(
          color: const Color(0xFFecf0f1),
          borderRadius: BorderRadius.circular(8),
        ),
        child: Center(
          child: Text(
            text,
            style: const TextStyle(
              fontWeight: FontWeight.w600,
              color: Color(0xFF2c3e50),
              fontSize: 12,
            ),
          ),
        ),
      ),
    );
  }
}